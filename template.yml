# Web URL: https://aws-codestar-us-east-1-940495839641-f1pick-app.s3.amazonaws.com/public/index.html
# API Endpoint: https://fu9wdatrml.execute-api.us-east-1.amazonaws.com/Stage/ | https://fu9wdatrml.execute-api.us-east-1.amazonaws.com/Prod/
# I want to create a Dyn table, put some data in there and display it on the page

AWSTemplateFormatVersion: 2010-09-09
Transform:
- AWS::Serverless-2016-10-31
- AWS::CodeStar

Parameters:
  ProjectId:
    Type: String
    Description: AWS CodeStar projectID used to associate new resources to team members

# Enable blue/green deployments using this Globals section. For instructions, see the AWS CodeStar User Guide:
# https://docs.aws.amazon.com/codestar/latest/userguide/how-to-modify-serverless-project.html?icmpid=docs_acs_rm_tr
#
Globals:
  Api:
    Cors: 
      AllowOrigin: "'*'"
#   Function:
#     AutoPublishAlias: live
#     DeploymentPreference:
#       Enabled: true
#       Type: Canary10Percent5Minutes

Resources:
  GetHelloWorld:
    Type: AWS::Serverless::Function
    Properties:
      Handler: index.get
      Runtime: nodejs10.x
      Role:
        Fn::ImportValue:
          !Join ['-', [!Ref 'ProjectId', !Ref 'AWS::Region', 'LambdaTrustRole']]
      Events:
        GetEvent:
          Type: Api
          Properties:
            Path: /
            Method: get
  GetUserData:
    Type: AWS::Serverless::Function
    Properties:
      Handler: user.get
      Runtime: nodejs10.x
      Events:
        GetEvent:
          Type: Api
          Properties:
            Path: /user
            Method: get
  GetUserDataByUserId:
    Type: AWS::Serverless::Function
    Properties:
      Handler: user.get
      Runtime: nodejs10.x
      Events:
        GetEvent:
          Type: Api
          Properties:
            Path: /user/{userId}
            Method: get
  DynamoDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: f1PickUserData
      AttributeDefinitions: 
        - AttributeName: pk
          AttributeType: S
      KeySchema: 
        - AttributeName: pk
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST
  CognitoUserAuthorizer:
    Type: AWS::ApiGateway::Authorizer
    Properties: 
      IdentitySource: 'method.request.header.Authorization'
      Name: cognitoUserAuthorizer
      # ProviderARNs:
      #   - 'arn:aws:cognito-idp:{region}:{userpoolIdentifier}'
      RestApiId: !Ref ServerlessRestApi
      Type: COGNITO_USER_POOLS
      # AuthorizerCredentials: null
      AuthorizerResultTtlInSeconds: 30
      # AuthorizerUri: null
      # AuthType: null
      # IdentitySource: COGNITO_USER_POOLS
      # IdentityValidationExpression: String
      # Name: cognitoUserAuthorizer
      ProviderARNs: 
        - arn:aws:cognito-idp:us-east-1:940495839641:userpool/us-east-1_ixfXs740V
      # RestApiId: String
      # Type: COGNITO_USER_POOLS